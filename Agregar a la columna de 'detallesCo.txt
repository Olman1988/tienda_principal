Nota******Previo a la implementación de cambios realizar un backup delos archivos y revisar el documento de "Personalización" que está en el directorio raíz.********
Version 1.3
Agregar a la tabla de 'detallesCotizacion' las columnas
1. observacion varchar(250)
1. archivos varchar(250)
1. personalizacion varchar(550)

Version 1.4
1. Principales cambios:
a. Se agrega Modulo de Tilopay para pagos con tarjetas
b. Se agrega interface de respuesta para mostrar la respuesta de las transacciones.

2.Procedimientos(indicar la base de datos para cada script)
a. Crear tabla paymentResponse
 - Script:
 	-/****** Object:  Table [dbo].[paymentResponse]    Script Date: 10/3/2023 11:25:28 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[paymentResponse](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[IDClient] [int] NOT NULL,
	[OrderCode] [varchar](50) NOT NULL,
	[responseCode] [varchar](50) NOT NULL,
	[creationDate] [datetime] NOT NULL,
	[lastDigits] [varchar](50) NULL,
	[auth] [varchar](50) NULL,
	[brand] [varchar](50) NULL,
	[tilopayTransaction] [varchar](100) NULL,
	[responseText] [varchar](250) NULL,
 CONSTRAINT [PK_paymentResponse] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO

ALTER TABLE [dbo].[paymentResponse] ADD  CONSTRAINT [DF_paymentResponse_creationDate]  DEFAULT (getdate()) FOR [creationDate]
GO
-/************************************** FIN ************************************/

b. Agregar columna de personalizacion a la tabla de OrdenDetalle
-Script:
    -  ALTER TABLE [dbo].[OrdenDetalle] ADD personalizacion varchar (255) null 

c. Crear tabla estadosOrdenes

/****** Object:  Table [dbo].[estadosOrdenes]    Script Date: 10/3/2023 11:36:39 ******/
 	
/****************************************FIN**************************************/

d. Crear tabla paymentTypeConfiguration
/****** Object:  Table [dbo].[paymentTypeConfiguration]    Script Date: 10/3/2023 11:49:20 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[paymentTypeConfiguration](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[HashID] [uniqueidentifier] NULL,
	[username] [nvarchar](100) NULL,
	[password] [nvarchar](100) NULL,
	[apikey] [nvarchar](100) NULL
) ON [PRIMARY]
GO
/*******************************FIN****************************/

e. Agregar los datos e configuración obtenidos por Tilopay en la base de datos
INSERT INTO [dbo].[paymentTypeConfiguration]
           ([HashID]
           ,[username]
           ,[password]
           ,[apikey])
     VALUES
           (NEWID()
           ,<username, nvarchar(100),>
           ,<password, nvarchar(100),>
           ,<apikey, nvarchar(100),>)
GO


f. Para crear una nueva tienda, copiar la base de datos y todos los archivos.
g. Para actualizar una tienda, copiar todos los archivos a excepción de las carpetas de: assets,config,images,phpmailer,unitegallery, unitegallery-master.

/**************************************************************************************************************/
version 1.5
Procedimientos:
1.Bases de datos
a. Crear tabla  
CREATE TABLE [dbo].EstadosCotizacion (
    ID int NOT NULL IDENTITY(1,1),
    Descrpcion varchar (100),
    PRIMARY KEY (ID)
);

b. Insertar datos
insert into EstadosCotizacion (Descrpcion)
values
  ('Pendiente'),
  ('Enviada'),
  ('Rechazada');

c. Agregar columna de estados.
ALTER TABLE [dbo].[Cotizacion] ADD Estado int DEFAULT 1

d. Agregar llave foranea de estados.
  ALTER TABLE [dbo].[Cotizacion]
ADD FOREIGN KEY (Estado) REFERENCES EstadosCotizacion(ID);

e. Agregar columna de alias e info
ALTER TABLE [dbo].[store_PaymentType] ADD alias varchar(100) null
ALTER TABLE [dbo].[store_PaymentType] ADD info varchar(1000) null

f. Insertar datos de pago
INSERT INTO [dbo].[store_PaymentType] (descripcion,estado,rutaImagen,alias,info)values('Tilopay',1,'tarjetas.png','Tarjeta','Pago con tarjetas Visa, MasterCard y AMEX')

g.Actualizar los métodos de pago existentes
update [dbo].[store_PaymentType] SET estado = 1, alias = 'Sinpe Movil', info ='8888-8888 / Max Rojas' where id = 1
update [dbo].[store_PaymentType] SET estado = 1, alias = 'Transferencia Bancaria', info ='BAC: CR4004578894512457812' where id = 2
update [dbo].[store_PaymentType] SET estado = 1,alias ='Tarjeta', info ='Pago con tarjetas Visa, MasterCard y AMEX' where id = 3

h. Agregar columna de hover color 
ALTER TABLE [dbo].[lookAndFeel] ADD colorHoverNavbar varchar (50) null


i. Crear tabla de Logistica General


/****** Object:  Table [dbo].[generalLogistic]    Script Date: 18/3/2023 02:44:24 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE TABLE [dbo].[generalLogistic](
	[ID] [int] IDENTITY(1,1) NOT NULL,
	[entregaOficina] [bit] NULL,
	[direccion] [nvarchar](300) NULL,
	[entregaDomicilio] [bit] NULL,
	[maps] [nchar](300) NULL,
 CONSTRAINT [PK_generalLogistic] PRIMARY KEY CLUSTERED 
(
	[ID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
GO


j. Insertar datos a tabla de logística general
GO

INSERT INTO [dbo].[generalLogistic]
           ([entregaOficina]
           ,[direccion]
           ,[entregaDomicilio]
           ,[maps])
     VALUES
           (1
           ,'{"provincia":"San Jose","canton":"Desamparados","Distrito":"Desamparados","barrio":"Calle Fallas","direccion":"200 mts sur de cruz roja"}'
           ,1
           ,'https://goo.gl/maps/UVXGBo8pQF39NCD96')
GO

k. Agregar columna de shipping general para el costo de envío general

ALTER TABLE [dbo].[store_StoreConfiguration] ADD generalShipping int null

l. Actualizar información general de costo de envío

update [dbo].[store_StoreConfiguration] set generalShipping = 2500 where id = 1

m. Fix estados ordenes:

insert into [atheneal_tienda].[dbo].[estadosOrdenes] values('Pago Rechazado') 01/04/2023

/*****************************************************************************************/
Version 1.6 - 30/03/2023
Detalles:
1. Actualización Órdenes del Cliente
2. Habilitar la opción de no realizar cálculos de envío como necesarios para pasar la sección de shipping.
3. Adicionar mensaje de al finald el carrito de compras con botón de Whastapp
4. Cambios en la interface de admin en el sidebar con opciones de despliegue de menú
5. Fix en inconvenientes de correo electrónico.
6. Mantenimiento de Blog.
7. Mantenimiento de FAQ.
8. Mantenimiento de Perfil de la tienda.
9. Mantenimiento de Configuración de la tienda.

Procedimientos necesarios:
1. Cambiar el archivo config/parameters.php la dirección de base_url3 a la que coresponda a la URL base del proyecto.
2. Transferir las imágenes de blog y logo a las carpetas correspondientes desde el backend anterior.
 a. /images/logo/ -> /images/admin/logos/
 b. /images/post/ -> /images/admin/blog/
 3. Copiar las tres imágenes que están en /images/admin/config del nuevo backend
 /***************************************************************************************/
 Version 1.7 - 07/04/2023
 1. Adicionar funcionamiento de cambios de estado de ordenes.
 2. Cambios generales en el carrito de compras.
 3. Cambios en la visualización de las órdenes.
 4. Revisión fixes generales.
 
 Procedimientos necesarios:
 1. Insertar estados en la base de datos de ordenes
 a. INSERT INTO [dbo].[estadosOrdenes] ([descripcion]) VALUES ('Pendiente'),('Pagado'),('Pago Rechazado'),('Rechazado'),('Entregado'),('En Camino').
 b. Verificar que los ID de estos estados están enumerados en el mismo orden del 1 al 6.
 


Version 1.8

1. Crear tabla de token
a. 
CREATE TABLE dbo.passwordtokens (
  ID int NOT NULL IDENTITY(1,1),
  creationDate datetime NOT NULL DEFAULT getdate(),
  OTP varchar(200) NOT NULL,
  idUser int NOT NULL,
  status varchar(50) NOT NULL CHECK( status IN('Active','Expired','Used')),
  CONSTRAINT fk_user_pass FOREIGN KEY (idUser) REFERENCES usuarios (idUsuario),
) 

